/*******************************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
*******************************************************************************************/
/*
Dealer Name: Brigham Young University
System Name: Crestron NVX Control
System Number: 0.1.0
Programmer: Dan Clegg
Comments: Communicate with DM-NVX-301-C transceivers. One instance of this module is only intended to
control a single receiver/transmitter pair, though multiple instances may be added to the control program
to cover all controlled transceivers.
*/

/*******************************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
*******************************************************************************************/
#SYMBOL_NAME "Crestron NVX Control"
#CATEGORY "46" "Crestron NVX"
#DEFINE_CONSTANT	BIGGESTSIZE	65534
#DEFINE_CONSTANT	NEWLINE	"\n"
#DEFINE_CONSTANT	BLANK	0
#DEFINE_CONSTANT	FIRSTSUB	1
#DEFINE_CONSTANT	SECONDSUB	2
#DEFINE_CONSTANT	THIRDSUB	3
#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#PRINT_TO_Trace
#ENABLE_Trace

/*******************************************************************************************
  DIGITAL, ANALOG and SERIAL INPUTS and OUTPUTS
*******************************************************************************************/
DIGITAL_INPUT SwitchOutputs;
DIGITAL_INPUT _skip_;
DIGITAL_INPUT DisplayInput1,DisplayInput2,DisplayInput3,DisplayBlank;

DIGITAL_INPUT _skip_,_skip_,_skip_;
ANALOG_INPUT Desired_Video_Source,Default_Video_Source,Current_Source_fb;


ANALOG_OUTPUT VideoOut;
DIGITAL_OUTPUT DisplayingInput1_fb,DisplayingInput2_fb,DisplayingInput3_fb,Blank_fb;

/*******************************************************************************************
  Parameters
*******************************************************************************************/

/*******************************************************************************************
  Global Variables
*******************************************************************************************/
INTEGER DesiredVideo,DefaultVideo;

/*******************************************************************************************
  Functions
*******************************************************************************************/
Function ResetOuts()
{
	DisplayingInput1_fb = 0;
	DisplayingInput2_fb = 0;
	DisplayingInput3_fb = 0;
	Blank_fb = 0;
}

/*******************************************************************************************
  Event Handlers
*******************************************************************************************/

CHANGE Desired_Video_Source {
	DesiredVideo = Desired_Video_Source;
}

CHANGE Default_Video_Source {
	DefaultVideo = Default_Video_Source;
}

CHANGE Current_Source_fb
{
	switch(Current_Source_fb){
		case(1):
		{
			ResetOuts();
			DisplayingInput1_fb = 1;
		}
		case(2):
		{
			ResetOuts();
			DisplayingInput2_fb = 1;
		}
		case(3):
		{
			ResetOuts();
			DisplayingInput3_fb = 1;
		}
		default:
		{
			ResetOuts();
			Blank_fb = 1;
		}
	}
}

RELEASE SwitchOutputs {	
	VideoOut = Desired_Video_Source;
}

RELEASE DisplayInput1
{
	VideoOut = FIRSTSUB;
}

RELEASE DisplayInput2
{
	VideoOut = SECONDSUB;
}

RELEASE DisplayInput3
{
	VideoOut = THIRDSUB;
}

RELEASE DisplayBlank
{
	VideoOut = BLANK;
}


/*******************************************************************************************
  Init() and Main()
*******************************************************************************************/
Function Init()
{
	DesiredVideo = 0;
	DefaultVideo = 0;
}

Function Main()
{
    WaitForInitializationComplete();
	Init();
    
	// At beginning of program initialize the output to the desired default
	VideoOut = DefaultVideo;
}
